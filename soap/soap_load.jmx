<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Moodle Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GATEWAY" elementType="Argument">
            <stringProp name="Argument.name">GATEWAY</stringProp>
            <stringProp name="Argument.value">https://cmsws.university.edu/PSIGW/PeopleSoftServiceListeningConnector/HSLOPRE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENV" elementType="Argument">
            <stringProp name="Argument.name">ENV</stringProp>
            <stringProp name="Argument.value">DESCRIPTION</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="STUDENTINFO" elementType="Argument">
            <stringProp name="Argument.name">STUDENTINFO</stringProp>
            <stringProp name="Argument.value">student_info_cleaned.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">emplid, program,catlyt</stringProp>
          </elementProp>
          <elementProp name="SOAPCREDS" elementType="Argument">
            <stringProp name="Argument.name">SOAPCREDS</stringProp>
            <stringProp name="Argument.value">soapcreds.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">soapuser,soappass</stringProp>
          </elementProp>
          <elementProp name="USERS" elementType="Argument">
            <stringProp name="Argument.name">USERS</stringProp>
            <stringProp name="Argument.value">50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOOPS" elementType="Argument">
            <stringProp name="Argument.name">LOOPS</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP" elementType="Argument">
            <stringProp name="Argument.name">RAMP</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SOAPACTION" elementType="Argument">
            <stringProp name="Argument.name">SOAPACTION</stringProp>
            <stringProp name="Argument.value">UNI_APP_OP.v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Trial Name" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TRIALNAME" elementType="Argument">
            <stringProp name="Argument.name">TRIALNAME</stringProp>
            <stringProp name="Argument.value">${ENV}_${USERS}_users_${RAMP}_rampup_${LOOPS}_loops_${__time(YMDHMS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Soap Credentials" enabled="true">
        <stringProp name="filename">${SOAPCREDS}</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">SOAPUSER,SOAPPASS</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Student Info" enabled="true">
        <stringProp name="filename">${STUDENTINFO}</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">EMPLID,PROGRAM,CATLYT,ADMITTERM</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Students" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USERS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP}</stringProp>
        <longProp name="ThreadGroup.start_time">1237815154000</longProp>
        <longProp name="ThreadGroup.end_time">1237815154000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">5000</stringProp>
          <stringProp name="RandomTimer.range">4000</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Sessions" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="CURTIME" elementType="Argument">
                <stringProp name="Argument.name">CURTIME</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMddHHmmss)}${__javaScript(&apos;${__time(SS)}&apos;.substring(0\,2))}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">Currenttime with 2 sigfigs on milliseconds.</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SOAP Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">${GATEWAY}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns=&quot;http://www.transfer.org/xsd/RequestDA&quot; xmlns:soap-env=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
  &lt;SOAP-ENV:Header&gt;
    &lt;wsse:Security SOAP-ENV:mustUnderstand=&quot;1&quot;&gt;
      &lt;wsse:UsernameToken&gt;
        &lt;wsse:Username&gt;${SOAPUSER}&lt;/wsse:Username&gt;
        &lt;wsse:Password&gt;${SOAPPASS}&lt;/wsse:Password&gt;
      &lt;/wsse:UsernameToken&gt;
    &lt;/wsse:Security&gt;
  &lt;/SOAP-ENV:Header&gt;
  &lt;SOAP-ENV:Body&gt;
    &lt;RequestDocument&gt;
      &lt;Envelope&gt;
        &lt;RequestType/&gt;
        &lt;TransactionType&gt;Request Degree Audit&lt;/TransactionType&gt;
        &lt;DocumentNumber&gt;${CURTIME}&lt;/DocumentNumber&gt;
        &lt;PartyId&gt;https://myapp.university.edu/soap&lt;/PartyId&gt;
      &lt;/Envelope&gt;
      &lt;RequestDetail&gt;
        &lt;Control&gt;
          &lt;ControlBatchId&gt;${CURTIME}&lt;/ControlBatchId&gt;
          &lt;ControlRequestServerName&gt;u.direct&lt;/ControlRequestServerName&gt;
          &lt;ControlRecord&gt;School&lt;/ControlRecord&gt;
          &lt;ControlRecordType&gt;A&lt;/ControlRecordType&gt;
        &lt;/Control&gt;
        &lt;RequestData&gt;
          &lt;Person&gt;
            &lt;PersonID&gt;
              &lt;PersonIdCode&gt;${EMPLID}&lt;/PersonIdCode&gt;
            &lt;/PersonID&gt;
          &lt;/Person&gt;
          &lt;DegreeProgram&gt;
            &lt;Institution&gt;
              &lt;Entity&gt;
                &lt;EntityIDCodeQualifier/&gt;
                &lt;EntityIDCode/&gt;
                &lt;EntityIDCodeGroup/&gt;
              &lt;/Entity&gt;
            &lt;/Institution&gt;
            &lt;AcademicProgram&gt;
              &lt;ProgramCode&gt;${PROGRAM}&lt;/ProgramCode&gt;
              &lt;ProgramCatalogYear&gt;20118&lt;/ProgramCatalogYear&gt;
            &lt;/AcademicProgram&gt;
          &lt;/DegreeProgram&gt;
        &lt;/RequestData&gt;
      &lt;/RequestDetail&gt;
    &lt;/RequestDocument&gt;
  &lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">${SOAPACTION}</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-834846388">DegreeAuditResult</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">${TRIALNAME}_results_tree.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${TRIALNAME}_summary.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
